#28th April 2020
#----------------------------

#Characteristics of a game -> the 4 C's
Conflict -> Element of struggle eg between players, chance or teams
Control - > These are rules they are either simple, complex. Fixed or flexible
Closure -> when games come to an end
Contravance -> elements of artificality  {eg infusion of powers

#Types of games -> NOTE: DEFINE CHARACTERISTICS FOR BOTH
Microgame - >brief game last btw 30 secs and 10 mins
What are the qualities of a microgame?

MiniGame -> Last between 10 and 45 minutes.

#Attributes of a game
------------------------
1. Goal -> this gives the player the purpose
They should be challanging yet achievable.

2. Feedback -> when a game updates a player on how they are doing
examples include:, attemps left, cumulative points, health bar

3. Voluntary participation -> requires players to recogonize the rules of the game
and accept them voluntarilty in order to participate. 

4. Rules -> these make achievement of the goal challanging,
which brings player encouragement.

#Game genres

1. Action games -> use of realtime skill in play eg jumping/ shoot at a moving target 
subcatergories include : (shooters games, tower defence,Maze games, fighters games)

2. Strategy games ->entails devising a strategy to overcome game obstacles 
Examples Include: Turn based games, timed strategy games.

3. Simulatoin games - > depicts real events that 
reproduces physics of the actual game. eg fight, flight, driving simulators.
types of simulations include sports simulation,  flight simulation, boat 

4. Puzzle games
Augmented reality games -> These games mimic real life situations 
and could be played for fun or improvement of human lives

#Principles of a Game
Substancial amount of research for game
Good game design

#Principles of Mobile Game Design
1. provide help on playing the game
2. easy to undersrand goals
3. Implement short sessions
4. Resume capability
5. Dynamic HCI

#Components of a game
Opening screen 
menu screen
music
sound effects
time -> timing a task,
lives 
obstacle
levels
adversaries -> who you're playing against

#--------------------------------------
#3rd May 2022
#----------------------------------
#Unity Documentation
#------------------------

Hierarchy window - > a hierarchical text representation of all the game objects.
Scene view -> For representation of a 2D or 3D perspective of the game
Game view -> Simulates your final rendered game through scene cameras. Hitting run will begin simulation of the game.
Cameras ->components that create an image of a viewpoint. The output is either drawn on screen or captured as texture
Overlays - > contain basic tools for manipulation of the scene
Inspector window - > for viewing and editing the properties of game objects.
Game object -> fundamental objects in unity that represent characters, scenes and props. 
They act as containers for components which implement the functionality of these objects.
Project window - > displays library of assets present (imported) into the projects.
Status bar -> provides notifications of unity processes.

#RigidBody
A component that allow game objects to act under the control of physics
ie uses NVIDIA PhysX physics engine - > an engine that allows reaction to collisions and gravity

#Properties of RigidBody
Mass -> in kg
Drag  -> Air resistance affecting the object (0- no resistance , 
infinity -> object cant move 
Angular Drag -> 
Use Gravity
Is Kinematic
Interpolate
Collision Detection

Colliders ->  They attach on gameObjects to define their shapes which are then used for
physical collisions.
-> They don't have to be exactly the same as the mesh of the object.
-> They are invisible


#Categories seperates into 2D and 3D
#2D
-Box collider 2D
-Circle Collider 3D
#3D
-Box Collider
-Sphere Collider
-Capsule Collider
Collision - > How does it occur?
when the physics engines detects that the colliders of 2 gameObjects have overlaped or
made contact when atleast one has a rigid body component and is in motion.

#Body types for 2D RigidBody
#Static
#-----
-No real rigidbody component attached to them, so the physics engine considers it to be
not moving
-applied to static gameObjects such as trees, walls, ground etc
-OnTrigger and OnCollision don't work
#Kinematic
-> Are entirely  driven by scripts
-> only process collisions with dynamic game objects
-> Dynamic Game Objects -> gameObjects that can move during runtime

#Dynamic Game Characters
these gameObjects are driven by a physics engine which controls the motion
(force, velocity, gravity etc..)


#19/5/2022
#Categories of Behaviour
Focal point
anticipation
annoiced change
Believable events and behavious
Ovalapping events and behaviour

#Principals of Environment
1.Focal point = gives player idea of what to focus on.
2.Anticipation = creation of suspence whithing. Informs the player that something is about to happen.
3.Believable Events and Behaviour
4.Overlapping events and behaviour - other activites outside the primary activity which can influence the events

#spacing can affect pacing
-How much time is spaced betweeen interaction of game objects?
Vary complexity - pacing
Pacing and spacing both form progression
Pacing - descibes the relationship betweeen an activity its intensity and duration in a game.
Spacing - range between objects and their interactivity.

#RULES DESIGN
the process of outlining the rules of a game.
for development of rules in an orderly manner
to prevent hanging rules or deadlock happening in a game.
it ensures a game is not operationally expensive.
examples of rules :
1. Navigation rules ->define navitation and unnavigate areas.
2. Point Earning rules
3. Attempt/ Life rules
4. Physics rules
5. Music rules -> what triggers music in the game?
6. Level transition rules -> eg after a player meets the objectives of a level.
7. Bonus Ability rules

#Rule Specification Table. (RRFPO)
Contains the following: 
-Rule
-Rule Category
-Functionality
-Preconditions
-Output/ Post condition

#Rules Mapping
Sequential mapping of all rules in the game.
Maps out a theoretical rule into a specific objective.
It gives a blueprint of all functionalities and pacing of game.

#Rules Mapping Table
Rule function - function name eg (function Mover())
Input/Trigger - eg keyboard keys
Action - eg up key, move positive on Z axis
Alternative action - eg No action/ displaying a message 
Pseudocode - ie if (get KeyInput is up){move positive on z axis}
Reward - eg 1 point for correct movement.
Pacer Logic- eg place enemy 10m from player, and reduce distance every 2 seconds.

#Scene Design Principles.
Categories
1. General -> eg (a). focal point (gives player something to focus on),
(b)Anticipation -> tells player what to soon expect eg horn to indicate arriving vihecle,
(c)Change announcement -> communicated changes to players. A good rule of thumb is 
degree of rarity which states that 
frequently occuring events changes don't need continous announcements
 as compared to rare events

2. Behaviour -> eg Believable events, Overlapping Events, Physics, Sound
3. Progression -> eg pacing
4. Environment -> eg spacing, game appeal, player interaction with other game objects,
communication ie clarity of solution to objectives.
 (eg team members being aware of objectives)



















